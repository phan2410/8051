C51 COMPILER V9.52.0.0   FREQUENZY_MEASURE                                                 02/21/2015 00:22:15 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FREQUENZY_MEASURE
OBJECT MODULE PLACED IN Frequenzy-measure.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Frequenzy-measure.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //24Mhz crystal => 2Mhz tick for timer (machine cycle=12 x clock cycle)
   2          #include <AT892051.H>
   3          /********Khai bao chan giao tiep************/
   4          #define LCD_RS P3_7
   5          #define LCD_RW P1_2
   6          #define LCD_EN P1_3
   7          #define LCD_D4 P1_4
   8          #define LCD_D5 P1_5
   9          #define LCD_D6 P1_6
  10          #define LCD_D7 P1_7
  11          unsigned n5,n4,n3,n2,n1,n0, delay, even, time, oldspeed, speed;
  12          /************************************/
  13          void delay_us(unsigned int t){
  14   1              unsigned int i;
  15   1              for(i=0;i<t;i++);
  16   1      }
  17          void delay_ms(unsigned int t){
  18   1              unsigned int i,j;
  19   1              for(i=0;i<t;i++)
  20   1              for(j=0;j<125;j++);
  21   1      }
  22          /**************Ctr giao tiep LCD 16x2 4bit**********************/
  23          void LCD_Enable(void){
  24   1              LCD_EN =1;
  25   1              delay_us(3);
  26   1              LCD_EN=0;
  27   1              delay_us(50);
  28   1      }
  29          //Ham Gui 4 Bit Du Lieu Ra LCD
  30          void LCD_Send4Bit(unsigned char Data){
  31   1              LCD_D4=Data & 0x01;
  32   1              LCD_D5=(Data>>1)&1;
  33   1              LCD_D6=(Data>>2)&1;
  34   1              LCD_D7=(Data>>3)&1;
  35   1      }
  36          // Ham Gui 1 Lenh Cho LCD
  37          void LCD_SendCommand(unsigned char command){
  38   1              LCD_Send4Bit(command >>4);/* Gui 4 bit cao */
  39   1              LCD_Enable();
  40   1              LCD_Send4Bit(command); /* Gui 4 bit thap*/
  41   1              LCD_Enable();
  42   1      }
  43          void LCD_Clear(){// Ham Xoa Man Hinh LCD
  44   1              LCD_SendCommand(0x01);
  45   1              delay_us(10);
  46   1      }
  47          // Ham Khoi Tao LCD
  48          void LCD_Init(){
  49   1              LCD_Send4Bit(0x00);
  50   1              delay_ms(20);
  51   1              LCD_RS=0;
  52   1              LCD_RW=0;
  53   1              LCD_Send4Bit(0x03);
  54   1              LCD_Enable();
  55   1              delay_ms(5);
C51 COMPILER V9.52.0.0   FREQUENZY_MEASURE                                                 02/21/2015 00:22:15 PAGE 2   

  56   1              LCD_Enable();
  57   1              delay_us(100);
  58   1              LCD_Enable();
  59   1              LCD_Send4Bit(0x02);
  60   1              LCD_Enable();
  61   1              LCD_SendCommand( 0x28 ); // giao thuc 4 bit, hien thi 2 hang, ki tu 5x8
  62   1              LCD_SendCommand( 0x0c); // cho phep hien thi man hinh
  63   1              LCD_SendCommand( 0x06 ); // tang ID, khong dich khung hinh
  64   1              LCD_SendCommand(0x01); // xoa toan bo khung hinh
  65   1      }
  66          void LCD_Gotoxy(unsigned char x, unsigned char y){
  67   1              unsigned char address;
  68   1              if(!y)address=(0x80+x);
  69   1              else address=(0xc0+x);
  70   1              delay_us(1000);
  71   1              LCD_SendCommand(address);
  72   1              delay_us(50);
  73   1      }
  74          void LCD_PutChar(unsigned char Data){//Ham Gui 1 Ki Tu
  75   1              LCD_RS=1;
  76   1              LCD_SendCommand(Data);
  77   1              LCD_RS=0 ;
  78   1      }
  79          void LCD_Puts (char *s){//Ham gui 1 chuoi ky tu
  80   1              while (*s){
  81   2                      LCD_PutChar(*s);
  82   2                      s++;
  83   2              }
  84   1      }
  85          
  86          /*************************interrupt timer 0****************************/
  87          void tmr0isr() interrupt 1{
  88   1        if(--delay==0){
  89   2          if (!P3_4) P3_4=1;
  90   2          delay=40;
  91   2          TR0=0;
  92   2        }
  93   1      }
  94          /*************************external interrupt 0****************************/
  95          void extint0() interrupt 0{
  96   1        if (P3_4){
  97   2          P3_4=0;
  98   2          TR0=1;
  99   2          if (++even==2){
 100   3              even=0;
 101   3                  if (++n0==10){
 102   4                    n0=0;
 103   4                    if(++n1==10){
 104   5                      n1=0;
 105   5                      if(++n2==10){
 106   6                        n2=0;
 107   6                        if(++n3==10){
 108   7                          n3=0;
 109   7                          if(++n4==10){
 110   8                            n4=0;
 111   8                            if(++n5==10){
 112   9                              n5=0;
 113   9                            }
 114   8                          }
 115   7                        }
 116   6                      }
 117   5                    }
C51 COMPILER V9.52.0.0   FREQUENZY_MEASURE                                                 02/21/2015 00:22:15 PAGE 3   

 118   4                  }
 119   3          }
 120   2        }
 121   1      }
 122          /*************************interrupt timer 1****************************/
 123          void tmr1isr() interrupt 3{
 124   1        --time;
 125   1        if(time==39){
 126   2          oldspeed=n5*100000+n4*10000+n3*1000+n2*100+n1*10+n0;
 127   2        }else if (time==0){
 128   2          speed=n5*100000+n4*10000+n3*1000+n2*100+n1*10+n0-oldspeed;
 129   2          time=40;
 130   2        }
 131   1      }
 132          /******************Ctr chinh**************************/
 133          void main(){
 134   1              LCD_Init();//Khoi tao LCD
 135   1              delay_ms(1000);
 136   1              LCD_Puts("An To Present");//Gui chuoi len LCD
 137   1              delay_ms(1000);
 138   1              LCD_Clear();//Xoa man hinh
 139   1              LCD_Gotoxy(0,0);//Tro toi vi tri
 140   1              LCD_Puts("Test LCD.......");
 141   1              delay_ms(1000);
 142   1              LCD_Gotoxy(0,1);//Tro toi vi tri
 143   1              LCD_Puts("OK!!!!");
 144   1              delay_ms(1000);
 145   1              EA=1;
 146   1              ET0=1;
 147   1              ET1=1;
 148   1              IT0=1;
 149   1              TMOD=0x12;
 150   1              TH0=6;
 151   1              TL0=6;
 152   1              TH1=0xC3;
 153   1              TL1=0x50;
 154   1              time=40;
 155   1              delay=40;
 156   1              LCD_Clear();
 157   1              delay_ms(300);
 158   1              LCD_Puts("Round: ");
 159   1              LCD_Gotoxy(0,1);
 160   1              LCD_Puts("Speed rps: ");
 161   1              EX0=1;
 162   1              TR1=1;
 163   1              while(1){
 164   2                LCD_Gotoxy(9,0);
 165   2                LCD_PutChar('0'+n5);
 166   2                LCD_PutChar('0'+n4);
 167   2                LCD_PutChar('0'+n3);
 168   2                LCD_PutChar('0'+n2);
 169   2                LCD_PutChar('0'+n1);
 170   2                LCD_PutChar('0'+n0);
 171   2                LCD_Gotoxy(11,1);
 172   2                LCD_PutChar('0'+speed/100);
 173   2                LCD_PutChar('0'+(speed%100)/10);
 174   2                LCD_PutChar('0'+(speed%100)%10);
 175   2              }
 176   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.52.0.0   FREQUENZY_MEASURE                                                 02/21/2015 00:22:15 PAGE 4   

   CODE SIZE        =   1004    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
